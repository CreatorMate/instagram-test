generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model brands {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar
  creator_brand creator_brand[]
  creators      creators[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model creator_brand {
  id         Int       @id @default(autoincrement())
  brand_id   Int?
  creator_id String?   @db.Uuid
  accepted   Boolean   @default(false)
  brands     brands?   @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  creators   creators? @relation(fields: [creator_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model creators {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String?
  access_token  String?
  name          String?
  expires_at    String?
  brand_id      Int?
  ig_id         String?
  creator_brand creator_brand[]
  brands        brands?         @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
